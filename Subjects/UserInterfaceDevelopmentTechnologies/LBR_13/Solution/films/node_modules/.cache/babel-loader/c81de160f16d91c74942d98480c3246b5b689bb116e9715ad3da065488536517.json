{"ast":null,"code":"var _jsxFileName = \"/home/renat/university/trpi/labs/13/films/src/Search/Search.tsx\",\n  _s = $RefreshSig$();\nimport { Category } from \"../Card\";\nimport { Cards } from \"../Cards/Cards\";\nimport \"./Search.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function search_for(input, type) {\n  try {\n    const response = await axios.get(\"https://www.omdbapi.com/\", {\n      params: {\n        apikey: \"d1f715ef\",\n        s: input\n      }\n    });\n    console.log(response);\n    if (response.data.Response === \"True\") {\n      const cards = response.data.Search.map(item => ({\n        title: item.Title,\n        year: parseInt(item.Year),\n        type: item.Type == 'movie' ? Category.movie : Category.series,\n        image: item.Poster,\n        url: `https://www.imdb.com/title/${item.imdbID}/`\n      }));\n      return cards;\n    } else {\n      return [];\n    }\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\nexport function Search() {\n  _s();\n  let [cards, setCards] = React.useState([]);\n  let [cat, setCat] = React.useState('');\n  let [input, setInput] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Search-input\",\n      placeholder: \"search\",\n      onChange: v => setInput(v.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search-props\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCat('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCat('movie')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \"Movies only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCat('series')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \"Series only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Search-button\",\n        onClick: async () => setCards(await search_for(input, cat)),\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"vEugbCnAfopvpE1rP96vX6HppmA=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Category","Cards","React","axios","jsxDEV","_jsxDEV","search_for","input","type","response","get","params","apikey","s","console","log","data","Response","cards","Search","map","item","title","Title","year","parseInt","Year","Type","movie","series","image","Poster","url","imdbID","error","_s","setCards","useState","cat","setCat","setInput","className","children","placeholder","onChange","v","target","value","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["/home/renat/university/trpi/labs/13/films/src/Search/Search.tsx"],"sourcesContent":["import { Card, Category } from \"../Card\";\nimport { Cards } from \"../Cards/Cards\";\nimport \"./Search.css\";\nimport React from \"react\";\nimport axios from \"axios\";\n\n\nasync function search_for(input: string, type: string): Promise<Card[]> {\n  try {\n    const response = await axios.get(\"https://www.omdbapi.com/\", {\n      params: {\n        apikey: \"d1f715ef\",\n        s: input,\n      },\n    });\n\n    console.log(response);\n\n    if (response.data.Response === \"True\") {\n      const cards: Card[] = response.data.Search.map((item: any) => ({\n        title: item.Title,\n        year: parseInt(item.Year),\n        type: item.Type == 'movie' ? Category.movie : Category.series,\n        image: item.Poster,\n        url: `https://www.imdb.com/title/${item.imdbID}/`,\n      }));\n\n      return cards;\n    } else {\n      return [];\n    }\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport function Search() {\n  let [cards, setCards] = React.useState([] as Card[]);\n  let [cat, setCat] = React.useState('');\n  let [input, setInput] = React.useState(\"\");\n\n  return (\n    <div className=\"Search\">\n      <input\n        className=\"Search-input\"\n        placeholder=\"search\"\n        onChange={(v) => setInput(v.target.value)}\n      />\n      <div className=\"Search-props\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"searchType\"\n            onChange={() => setCat('')}\n          />\n          All\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"searchType\"\n            onChange={() => setCat('movie')}\n          />\n          Movies only\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"searchType\"\n            onChange={() => setCat('series')}\n          />\n          Series only\n        </label>\n\n        <button\n          className=\"Search-button\"\n          onClick={async () => setCards(await search_for(input, cat))}\n        >\n          search\n        </button>\n      </div>\n      <Cards cards={cards} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}