{"ast":null,"code":"var _jsxFileName = \"/home/renat/university/trpi/labs/13/films/src/Search/Search.tsx\",\n  _s = $RefreshSig$();\nimport { Category } from \"../Card\";\nimport { Cards } from \"../Cards/Cards\";\nimport \"./Search.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function search_for(input, type) {\n  let result = [];\n  for (let i = 1; i < 3; ++i) {\n    try {\n      const response = await axios.get(\"https://www.omdbapi.com/\", {\n        params: {\n          apikey: \"d1f715ef\",\n          s: input,\n          type: type,\n          page: i\n        }\n      });\n      console.log(response);\n      if (response.data.Response === \"False\") break;\n      const cards = response.data.Search.map(item => ({\n        title: item.Title,\n        year: parseInt(item.Year),\n        type: item.Type == \"movie\" ? Category.movie : Category.series,\n        image: item.Poster,\n        url: `https://www.imdb.com/title/${item.imdbID}/`\n      }));\n      result = result.concat(cards);\n    } catch (error) {\n      console.error(error);\n      break;\n    }\n  }\n  return result;\n}\nexport function Search() {\n  _s();\n  let [cards, setCards] = React.useState([]);\n  let [cat, setCat] = React.useState(\"\");\n  let [input, setInput] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Search-input\",\n      placeholder: \"search\",\n      onChange: v => setInput(v.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search-props\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCat(\"\"),\n          checked: cat == \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \"All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCat(\"movie\"),\n          checked: cat == \"movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), \"Movies only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCat(\"series\"),\n          checked: cat == \"series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \"Series only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Search-button\",\n        onClick: async () => setCards(await search_for(input, cat)),\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"NKa5dZPnwfc9fgZUw3lrUKTI9rQ=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Category","Cards","React","axios","jsxDEV","_jsxDEV","search_for","input","type","result","i","response","get","params","apikey","s","page","console","log","data","Response","cards","Search","map","item","title","Title","year","parseInt","Year","Type","movie","series","image","Poster","url","imdbID","concat","error","_s","setCards","useState","cat","setCat","setInput","className","children","placeholder","onChange","v","target","value","fileName","_jsxFileName","lineNumber","columnNumber","name","checked","onClick","_c","$RefreshReg$"],"sources":["/home/renat/university/trpi/labs/13/films/src/Search/Search.tsx"],"sourcesContent":["import { Card, Category } from \"../Card\";\nimport { Cards } from \"../Cards/Cards\";\nimport \"./Search.css\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nasync function search_for(input: string, type: string): Promise<Card[]> {\n\n  let result: Card[] = [];\n\n  for (let i = 1; i < 3; ++i) {\n    try {\n      const response = await axios.get(\"https://www.omdbapi.com/\", {\n        params: {\n          apikey: \"d1f715ef\",\n          s: input,\n          type: type,\n          page: i,\n        },\n      });\n\n      console.log(response);\n\n      if (response.data.Response === \"False\") break;\n\n      const cards: Card[] = response.data.Search.map((item: any) => ({\n        title: item.Title,\n        year: parseInt(item.Year),\n        type: item.Type == \"movie\" ? Category.movie : Category.series,\n        image: item.Poster,\n        url: `https://www.imdb.com/title/${item.imdbID}/`,\n      }));\n\n      result = result.concat(cards);\n    } catch (error) {\n      console.error(error);\n      break;\n    }\n  }\n  return result;\n}\n\nexport function Search() {\n  let [cards, setCards] = React.useState([] as Card[]);\n  let [cat, setCat] = React.useState(\"\");\n  let [input, setInput] = React.useState(\"\");\n\n  return (\n    <div className=\"Search\">\n      <input\n        className=\"Search-input\"\n        placeholder=\"search\"\n        onChange={(v) => setInput(v.target.value)}\n      />\n      <div className=\"Search-props\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"searchType\"\n            onChange={() => setCat(\"\")}\n            checked={cat == \"\"}\n          />\n          All\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"searchType\"\n            onChange={() => setCat(\"movie\")}\n            checked={cat == \"movie\"}\n          />\n          Movies only\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"searchType\"\n            onChange={() => setCat(\"series\")}\n            checked={cat == \"series\"}\n          />\n          Series only\n        </label>\n\n        <button\n          className=\"Search-button\"\n          onClick={async () => setCards(await search_for(input, cat))}\n        >\n          search\n        </button>\n      </div>\n      <Cards cards={cards} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAAeA,QAAQ,QAAQ,SAAS;AACxC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAeC,UAAUA,CAACC,KAAa,EAAEC,IAAY,EAAmB;EAEtE,IAAIC,MAAc,GAAG,EAAE;EAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,0BAA0B,EAAE;QAC3DC,MAAM,EAAE;UACNC,MAAM,EAAE,UAAU;UAClBC,CAAC,EAAER,KAAK;UACRC,IAAI,EAAEA,IAAI;UACVQ,IAAI,EAAEN;QACR;MACF,CAAC,CAAC;MAEFO,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MAErB,IAAIA,QAAQ,CAACQ,IAAI,CAACC,QAAQ,KAAK,OAAO,EAAE;MAExC,MAAMC,KAAa,GAAGV,QAAQ,CAACQ,IAAI,CAACG,MAAM,CAACC,GAAG,CAAEC,IAAS,KAAM;QAC7DC,KAAK,EAAED,IAAI,CAACE,KAAK;QACjBC,IAAI,EAAEC,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC;QACzBrB,IAAI,EAAEgB,IAAI,CAACM,IAAI,IAAI,OAAO,GAAG9B,QAAQ,CAAC+B,KAAK,GAAG/B,QAAQ,CAACgC,MAAM;QAC7DC,KAAK,EAAET,IAAI,CAACU,MAAM;QAClBC,GAAG,EAAG,8BAA6BX,IAAI,CAACY,MAAO;MACjD,CAAC,CAAC,CAAC;MAEH3B,MAAM,GAAGA,MAAM,CAAC4B,MAAM,CAAChB,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAACA,KAAK,CAAC;MACpB;IACF;EACF;EACA,OAAO7B,MAAM;AACf;AAEA,OAAO,SAASa,MAAMA,CAAA,EAAG;EAAAiB,EAAA;EACvB,IAAI,CAAClB,KAAK,EAAEmB,QAAQ,CAAC,GAAGtC,KAAK,CAACuC,QAAQ,CAAC,EAAY,CAAC;EACpD,IAAI,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGzC,KAAK,CAACuC,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAAClC,KAAK,EAAEqC,QAAQ,CAAC,GAAG1C,KAAK,CAACuC,QAAQ,CAAC,EAAE,CAAC;EAE1C,oBACEpC,OAAA;IAAKwC,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBzC,OAAA;MACEwC,SAAS,EAAC,cAAc;MACxBE,WAAW,EAAC,QAAQ;MACpBC,QAAQ,EAAGC,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFlD,OAAA;MAAKwC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzC,OAAA;QAAAyC,QAAA,gBACEzC,OAAA;UACEG,IAAI,EAAC,OAAO;UACZgD,IAAI,EAAC,YAAY;UACjBR,QAAQ,EAAEA,CAAA,KAAML,MAAM,CAAC,EAAE,CAAE;UAC3Bc,OAAO,EAAEf,GAAG,IAAI;QAAG;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,OAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRlD,OAAA;QAAAyC,QAAA,gBACEzC,OAAA;UACEG,IAAI,EAAC,OAAO;UACZgD,IAAI,EAAC,YAAY;UACjBR,QAAQ,EAAEA,CAAA,KAAML,MAAM,CAAC,OAAO,CAAE;UAChCc,OAAO,EAAEf,GAAG,IAAI;QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRlD,OAAA;QAAAyC,QAAA,gBACEzC,OAAA;UACEG,IAAI,EAAC,OAAO;UACZgD,IAAI,EAAC,YAAY;UACjBR,QAAQ,EAAEA,CAAA,KAAML,MAAM,CAAC,QAAQ,CAAE;UACjCc,OAAO,EAAEf,GAAG,IAAI;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAERlD,OAAA;QACEwC,SAAS,EAAC,eAAe;QACzBa,OAAO,EAAE,MAAAA,CAAA,KAAYlB,QAAQ,CAAC,MAAMlC,UAAU,CAACC,KAAK,EAAEmC,GAAG,CAAC,CAAE;QAAAI,QAAA,EAC7D;MAED;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlD,OAAA,CAACJ,KAAK;MAACoB,KAAK,EAAEA;IAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAAChB,EAAA,CAnDejB,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}