{"ast":null,"code":"var _jsxFileName = \"/home/renat/university/trpi/labs/13/films/src/Search/Search.tsx\",\n  _s = $RefreshSig$();\nimport { Cards } from \"../Cards/Cards\";\nimport \"./Search.css\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Category = /*#__PURE__*/function (Category) {\n  Category[Category[\"all\"] = 0] = \"all\";\n  Category[Category[\"movies\"] = 1] = \"movies\";\n  Category[Category[\"series\"] = 2] = \"series\";\n  return Category;\n}(Category || {});\nexport function Search() {\n  _s();\n  let [cards, setCards] = React.useState([]);\n  let [category, setCategory] = React.useState(Category.all);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Search-input\",\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCategory(Category.all)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" All\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCategory(Category.movies)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), \" Movies only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"searchType\",\n          onChange: () => setCategory(Category.series)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), \" Series only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"C79TjqJQt/kiqnBBTdU/Z3lGIh4=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Cards","React","jsxDEV","_jsxDEV","Category","Search","_s","cards","setCards","useState","category","setCategory","all","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","movies","series","_c","$RefreshReg$"],"sources":["/home/renat/university/trpi/labs/13/films/src/Search/Search.tsx"],"sourcesContent":["import { Card } from \"../Card\";\nimport { Cards } from \"../Cards/Cards\";\nimport \"./Search.css\";\nimport React from \"react\";\n\nenum Category {\n  all,\n  movies,\n  series,\n}\n\nexport function Search() {\n  let [cards, setCards] = React.useState([] as Card[]);\n  let [category, setCategory] = React.useState(Category.all);\n\n  return (\n    <div className=\"Search\">\n      <input className=\"Search-input\" placeholder=\"search\" />\n      <div>\n        <label>\n          <input type=\"radio\" name=\"searchType\" onChange={() => setCategory(Category.all)} /> All\n        </label>\n        <label>\n          <input type=\"radio\" name=\"searchType\" onChange={() => setCategory(Category.movies)}/> Movies only\n        </label>\n        <label>\n          <input type=\"radio\" name=\"searchType\" onChange={() => setCategory(Category.series)}/> Series only\n        </label>\n      </div>\n      <Cards cards={cards} />\n    </div>\n  );\n}\n"],"mappings":";;AACA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAErBC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA,EAARA,QAAQ;AAMb,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACvB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAY,CAAC;EACpD,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAACL,QAAQ,CAACQ,GAAG,CAAC;EAE1D,oBACET,OAAA;IAAKU,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBX,OAAA;MAAOU,SAAS,EAAC,cAAc;MAACE,WAAW,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDhB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAOiB,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,YAAY;UAACC,QAAQ,EAAEA,CAAA,KAAMX,WAAW,CAACP,QAAQ,CAACQ,GAAG;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,QACrF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRhB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAOiB,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,YAAY;UAACC,QAAQ,EAAEA,CAAA,KAAMX,WAAW,CAACP,QAAQ,CAACmB,MAAM;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gBACvF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRhB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAOiB,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,YAAY;UAACC,QAAQ,EAAEA,CAAA,KAAMX,WAAW,CAACP,QAAQ,CAACoB,MAAM;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gBACvF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNhB,OAAA,CAACH,KAAK;MAACO,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACb,EAAA,CArBeD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}