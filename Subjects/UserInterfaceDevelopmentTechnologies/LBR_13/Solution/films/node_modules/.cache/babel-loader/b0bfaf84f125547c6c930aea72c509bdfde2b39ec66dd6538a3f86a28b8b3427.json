{"ast":null,"code":"var _jsxFileName = \"/home/renat/university/trpi/labs/12/films/src/App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Menu } from \"./Menu/Menu\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Category } from \"./Card\";\nimport { Cards } from \"./Cards/Cards\";\nimport cock_png from \"./cock.png\";\nimport mmm_png from \"./mmm.png\";\nimport fish_png from \"./fish.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cock_card = {\n  title: \"Cock\",\n  year: 2024,\n  type: Category.movie,\n  image: cock_png,\n  url: \"https://gorodskayaferma.ru/blog-ferma/fakty-o-petuhah/\"\n};\nconst mmm_card = {\n  title: \"red and yellow\",\n  year: 2020,\n  type: Category.cartoon,\n  image: mmm_png,\n  url: \"https://www.color-meanings.com/what-color-yellow-red-make-mixed/\"\n};\nconst fish_card = {\n  title: \"fish\",\n  year: 2042,\n  type: Category.series,\n  image: fish_png,\n  url: \"https://www.youtube.com/watch?v=eAQKifmUUtg\"\n};\nconst movie_cards = [cock_card, cock_card, cock_card, cock_card, cock_card, cock_card];\nconst mmm_cards = [mmm_card, mmm_card, mmm_card, mmm_card, mmm_card, mmm_card];\nconst fish_cards = [fish_card, fish_card, fish_card, fish_card, fish_card, fish_card];\nfunction App() {\n  _s();\n  let [cards, setCards] = useState(movie_cards);\n\n  // predefined categories\n  function categoryClicked(cat) {\n    switch (cat) {\n      case \"movie\":\n        setCards(movie_cards);\n        break;\n      case \"cartoon\":\n        setCards(mmm_cards);\n        break;\n      case \"series\":\n        setCards(fish_cards);\n        break;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        items: Object.keys(Category).filter(item => isNaN(Number(item))),\n        clicked: categoryClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t6ejf0wK8QJjY/73U66VPXKcfH4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Router","Menu","Footer","Category","Cards","cock_png","mmm_png","fish_png","jsxDEV","_jsxDEV","cock_card","title","year","type","movie","image","url","mmm_card","cartoon","fish_card","series","movie_cards","mmm_cards","fish_cards","App","_s","cards","setCards","categoryClicked","cat","children","className","items","Object","keys","filter","item","isNaN","Number","clicked","fileName","_jsxFileName","lineNumber","columnNumber","Switch","_c","$RefreshReg$"],"sources":["/home/renat/university/trpi/labs/12/films/src/App.tsx"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Menu } from \"./Menu/Menu\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Card, Category } from \"./Card\";\nimport { Cards } from \"./Cards/Cards\";\nimport cock_png from \"./cock.png\"\nimport mmm_png from \"./mmm.png\"\nimport fish_png from \"./fish.jpg\"\n\nconst cock_card: Card = {\n  title: \"Cock\",\n  year: 2024,\n  type: Category.movie,\n  image: cock_png,\n  url: \"https://gorodskayaferma.ru/blog-ferma/fakty-o-petuhah/\",\n}\n\nconst mmm_card: Card = {\n  title: \"red and yellow\",\n  year: 2020,\n  type: Category.cartoon,\n  image: mmm_png,\n  url: \"https://www.color-meanings.com/what-color-yellow-red-make-mixed/\",\n}\n\nconst fish_card: Card = {\n  title: \"fish\",\n  year: 2042,\n  type: Category.series,\n  image: fish_png,\n  url: \"https://www.youtube.com/watch?v=eAQKifmUUtg\",\n}\n\nconst movie_cards: Card[] = [\n  cock_card,\n  cock_card,\n  cock_card,\n  cock_card,\n  cock_card,\n  cock_card,\n]\n\nconst mmm_cards: Card[] = [\n  mmm_card,\n  mmm_card,\n  mmm_card,\n  mmm_card,\n  mmm_card,\n  mmm_card,\n]\n\nconst fish_cards: Card[] = [\n  fish_card,\n  fish_card,\n  fish_card,\n  fish_card,\n  fish_card,\n  fish_card,\n]\n\nfunction App() {\n  let [cards, setCards] = useState<Card[]>(movie_cards);\n\n  // predefined categories\n  function categoryClicked(cat: string) {\n    switch (cat) {\n      case \"movie\":\n        setCards(movie_cards)\n        break\n      case \"cartoon\":\n        setCards(mmm_cards)\n        break\n      case \"series\":\n        setCards(fish_cards)\n        break\n    }\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Menu\n          items={Object.keys(Category).filter((item) => isNaN(Number(item)))}\n          clicked={categoryClicked}\n        />\n\n        <Switch>\n          <Cards cards={cards}/>\n        </Switch>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAAeC,QAAQ,QAAQ,QAAQ;AACvC,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAe,GAAG;EACtBC,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAEV,QAAQ,CAACW,KAAK;EACpBC,KAAK,EAAEV,QAAQ;EACfW,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,QAAc,GAAG;EACrBN,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAEV,QAAQ,CAACe,OAAO;EACtBH,KAAK,EAAET,OAAO;EACdU,GAAG,EAAE;AACP,CAAC;AAED,MAAMG,SAAe,GAAG;EACtBR,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAEV,QAAQ,CAACiB,MAAM;EACrBL,KAAK,EAAER,QAAQ;EACfS,GAAG,EAAE;AACP,CAAC;AAED,MAAMK,WAAmB,GAAG,CAC1BX,SAAS,EACTA,SAAS,EACTA,SAAS,EACTA,SAAS,EACTA,SAAS,EACTA,SAAS,CACV;AAED,MAAMY,SAAiB,GAAG,CACxBL,QAAQ,EACRA,QAAQ,EACRA,QAAQ,EACRA,QAAQ,EACRA,QAAQ,EACRA,QAAQ,CACT;AAED,MAAMM,UAAkB,GAAG,CACzBJ,SAAS,EACTA,SAAS,EACTA,SAAS,EACTA,SAAS,EACTA,SAAS,EACTA,SAAS,CACV;AAED,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAASuB,WAAW,CAAC;;EAErD;EACA,SAASO,eAAeA,CAACC,GAAW,EAAE;IACpC,QAAQA,GAAG;MACT,KAAK,OAAO;QACVF,QAAQ,CAACN,WAAW,CAAC;QACrB;MACF,KAAK,SAAS;QACZM,QAAQ,CAACL,SAAS,CAAC;QACnB;MACF,KAAK,QAAQ;QACXK,QAAQ,CAACJ,UAAU,CAAC;QACpB;IACJ;EACF;EAEA,oBACEd,OAAA,CAACT,MAAM;IAAA8B,QAAA,eACLrB,OAAA;MAAKsB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBrB,OAAA,CAACR,IAAI;QACH+B,KAAK,EAAEC,MAAM,CAACC,IAAI,CAAC/B,QAAQ,CAAC,CAACgC,MAAM,CAAEC,IAAI,IAAKC,KAAK,CAACC,MAAM,CAACF,IAAI,CAAC,CAAC,CAAE;QACnEG,OAAO,EAAEX;MAAgB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eAEFlC,OAAA,CAACmC,MAAM;QAAAd,QAAA,eACLrB,OAAA,CAACL,KAAK;UAACsB,KAAK,EAAEA;QAAM;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eAETlC,OAAA,CAACP,MAAM;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAAClB,EAAA,CAlCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}